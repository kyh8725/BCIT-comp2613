/**
 * Project: Assignment2
 * File: MainFrame.java
 * Date: Jun 10, 2017
 * Time: 9:00:41 PM
 */

package a00904649.ui;

import java.awt.BorderLayout;
import java.awt.Event;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;

import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.KeyStroke;
import javax.swing.border.EmptyBorder;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import a00904649.Bcmc;

/**
 * @author Yoonho(Daniel) Kim A00904649
 *
 */
@SuppressWarnings("serial")
public class MainFrame extends JFrame {

	private static final Logger LOG = LogManager.getLogger(Bcmc.class);
	private JPanel contentPane;
	private JMenuItem mntmExit;
	private JMenuItem mntmAbout;
	private JMenuItem mntmInventory;
	private JMenuItem mntmService;
	private JMenuItem mntmCustomers;

	/**
	 * Create the frame.
	 */
	public MainFrame() {
		LOG.debug("Creating the MainFrame");
		createUi();
		addEventHandlers();
	}

	private void createUi() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);

		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);

		JMenu mnFile = new JMenu("File");
		menuBar.add(mnFile);

		mntmExit = new JMenuItem("Quit");
		mntmExit.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X, InputEvent.ALT_MASK));
		mnFile.add(mntmExit);

		JMenu mnData = new JMenu("Data");
		menuBar.add(mnData);

		mntmCustomers = new JMenuItem("Customers");
		mntmCustomers.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_C, Event.ALT_MASK));
		mnData.add(mntmCustomers);

		mntmService = new JMenuItem("Service");
		mntmService.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, Event.ALT_MASK));
		mnData.add(mntmService);

		mntmInventory = new JMenuItem("Inventory");
		mntmInventory.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent arg0) {
			}
		});
		mntmInventory.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_I, Event.ALT_MASK));
		mnData.add(mntmInventory);

		JMenu mnReports = new JMenu("Reports");
		menuBar.add(mnReports);

		JMenuItem mntmTotal = new JMenuItem("Total");
		mntmTotal.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_T, Event.ALT_MASK));
		mnReports.add(mntmTotal);

		JMenuItem mntmByDescription = new JMenuItem("By Description");
		mntmByDescription.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_D, Event.ALT_MASK));
		mnReports.add(mntmByDescription);

		JMenuItem mntmByCount = new JMenuItem("By Count");
		mntmByCount.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_C, Event.ALT_MASK));
		mnReports.add(mntmByCount);

		JMenuItem mntmMake = new JMenuItem("Make");
		mntmMake.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_M, Event.ALT_MASK));
		mnReports.add(mntmMake);

		JMenu mnHelp = new JMenu("Help");
		menuBar.add(mnHelp);

		mntmAbout = new JMenuItem("About");
		mntmAbout.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F1, 0));
		mnHelp.add(mntmAbout);

		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		contentPane.setLayout(new BorderLayout(0, 0));
		setContentPane(contentPane);

	}

	/**
	 * 
	 */
	private void addEventHandlers() {
		LOG.debug("addEventHandlers");
		new UiController(this);

		mntmCustomers.addActionListener(new UiController.CustomerItemHandler());
		mntmService.addActionListener(new UiController.ServiceItemHandler());
		mntmExit.addActionListener(new UiController.ExitMenuItemHandler());
		mntmAbout.addActionListener(new UiController.AboutMenuItemHandler());
	}

}
